Nessa bateria de teste foi feito uma comparação de duas estruturas de dados importantes fila de prioridade (implementadas em um heap) e árvores binarias de busca. 
Nesse teste cada estrutura recebeu um sequencia grande de inteiros para serem armazena  e foi calculado o tempo que a estrutura demora para realizar essas inserções. para salvar a o resultado da arvore binaria de busca foi tomada uma precaução para imprimir  os inteiros em ordem crescente, utilizando a ordem de impressão de primeiros os filhos esquerdos depois as raízes e por último os filhos direito assim garantindo que a impressão fosse realizada em ordem crescente. já na fila de prioridades foi extraindo o menor elemento da fila.
  Nessa bateria de teste ficou evidente que a fila de prioridades implementada com um heap  tem uma eficiência bem melhor do que uma arvore binaria de busca dado que utilizando uma sequência de 300000(trezentos mil) inteiros a arvore binaria de busca levou em média 8 segundos para realizar as inserções e salva em um arquivo de forma ordenada, já a fila de prioridades não chegou nem a 0.2 segundos para realizar a inserção da mesma sequência . essa diferença se dá pelo fato da fila de prioridades implementadas em um heap tem complexidade de pior caso logarítmica, já a arvore binaria de busca tem complexidade de pior caso linear  

E fazendo outro experimento forçando o pior caso das arvores binarias de busca o tempo fica bem maior(ao ponto do nível de uso da CPU apresentada pelo Replit ficar no máximo e a execução não terminar). para forçar esse pior caso foi usado uma sequência de inteiros em ordem crescente.
